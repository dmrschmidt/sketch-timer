var timeFormatter = new TimeFormatter()
var queuePlayer
var sketchTimer
var sleepPreventer

var environmentVariablesMissing = <%= ENV['SOUNDCLOUD_CLIENT_ID'].nil? %>
var isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || safari.pushNotification) || navigator.userAgent.match(/iPhone/i)

if (!isSafari) {
  alert("Sorry, for now sound playback only works in Safari and on Apple mobile devices :-/")
}

if (environmentVariablesMissing) {
  alert("" +
    "Ensure that environment variable SOUNDCLOUD_CLIENT_ID is set " +
    "to your app's SoundCloud API client_id."
  );
} else {
  SC.initialize({
    client_id: '<%= ENV['SOUNDCLOUD_CLIENT_ID'] %>'
  });
}

function getJsonFromUrl() {
  var query = location.search.substr(1)
  var result = {}
  query.split("&").forEach(function(part) {
    var item = part.split("=")
    result[item[0]] = decodeURIComponent(item[1])
  })
  return result
}

$(document).ready(function() {
  soundManager.setup({ onready: function() {
    var passedPlaylistUrl = getJsonFromUrl().playlist
    queuePlayer = new QueuePlayer(SC, soundManager, '<%= ENV['SOUNDCLOUD_CLIENT_ID'] %>', passedPlaylistUrl)
    sleepPreventer = new SleepPreventer(new NoSleep())
    sketchTimer = new SketchTimer($('#timer'), $('html'), timeFormatter, queuePlayer, sleepPreventer)
    sketchTimer.init()
  }})
})
